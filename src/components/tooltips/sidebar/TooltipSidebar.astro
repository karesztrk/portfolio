---
import type { HTMLAttributes } from "astro/types";
import Icon from "astro-svg-icon";
import Folder from "@/assets/images/icons/Folder.svg";
import Markdown from "@/assets/images/icons/Markdown.svg";
import { formatTitle } from "@/util/blog.util";
import type { TooltipCollection } from "@/util/collections.util";

interface Props extends HTMLAttributes<"aside"> {
  collections: TooltipCollection;
}

const { id, collections, ...props } = Astro.props;
---

<tt-sidebar id={id} {...props} role="complementary">
  <form method="get">
    <ul>
      {
        Object.entries(collections).map(([name, value]) => (
          <li>
            <details name="category">
              <summary>
                <Icon
                  src={Folder.src}
                  viewBox={`0 0 ${Folder.width} ${Folder.height}`}
                  height="14px"
                />
                <span>{name}</span>
              </summary>
              <ul id={`${name}-list`}>
                {value.map((entry) => (
                  <li>
                    <button
                      name="slug"
                      value={entry.slug}
                      formaction={`/tooltips/${name}#${entry.slug}`}
                    >
                      <Icon
                        src={Markdown.src}
                        viewBox={`0 0 ${Markdown.width} ${Markdown.height}`}
                      />
                      <span>{formatTitle(entry.id)}</span>
                    </button>
                  </li>
                ))}
              </ul>
            </details>
          </li>
        ))
      }
    </ul>
  </form>
</tt-sidebar>

<template id="tt-item-template">
  <li>
    <button name="slug" value="" formaction={`/tooltips/`}>
      <Icon
        src={Markdown.src}
        viewBox={`0 0 ${Markdown.width} ${Markdown.height}`}
      />
      <span class="local-item"></span>
    </button>
  </li>
</template>

<script>
  import "@/components/tooltips/sidebar/TooltipSidebar";
</script>

<style>
  tt-sidebar {
    --easing: cubic-bezier(0.65, 0, 0.35, 1);
    --transition-time: 500ms;
    position: absolute;
    inset: 0;
    overflow: auto;
    transition: all var(--transition-time) var(--easing) allow-discrete;
    font-size: 1rem;
    opacity: 1;
    margin-block-start: calc(var(--p-margin) * 1.25);
  }

  @starting-style {
    tt-sidebar {
      opacity: 0;
    }
  }

  details {
    background: none;
    padding: 0;
    margin: 0;
    border: 0;
  }

  summary {
    background: none;
    font-variation-settings: "CASL" 0;
    font-size: 1rem;

    > .icon,
    > span {
      vertical-align: middle;
    }

    &:hover,
    &:focus {
      color: var(--color-title);
    }
  }

  p {
    font-variation-settings: "CASL" 0;
  }

  button {
    background: none;
    padding: 0;
    margin: 0;
    font-family: var(--font-base);
  }

  ul,
  li {
    list-style: none;
  }

  ul {
    margin: 0;
  }

  li {
    color: var(--color-li-group-text);
    font-size: 1rem;

    &[aria-current] {
      button {
        outline: none;
        background: var(--color-li-bg-hl);
        color: var(--color-background);
      }
    }
  }

  button {
    font-variation-settings: "CASL" 0;
    color: var(--color-text);
    background: var(--color-background);
    border: 0;
    width: 100%;
    text-align: left;
    font-size: 1rem;
    padding: 0.375em 0.5em;
    display: flex;
    align-items: center;
    gap: 0.5em;
    margin: 0;
    text-decoration: none;

    &:hover,
    &[aria-selected] {
      outline: none;
      background: var(--color-li-bg-hl);
      color: var(--color-background);
    }

    &:before,
    &:after {
      content: none;
    }

    .local-item {
      &::before {
        content: "❲";
      }
      &::after {
        content: "❳";
      }
      &::before,
      &::after {
        color: var(--color-yellow-5);
      }
    }
  }

  label {
    line-height: 1rem;
    &:hover,
    &:focus-visible {
      outline-style: auto;
      outline-offset: var(--button-outline-offset);
    }
  }

  @supports (animation-timeline: view()) {
    @media (prefers-reduced-motion: no-preference) {
      tt-sidebar {
        ul {
          ul {
            li {
              --tilt: 30deg;
              --push-back: -10px;
              --top-fade: 0.75;
              --top-blur: 1px;
              animation:
                list-item-enter linear forwards,
                list-item-exit linear forwards;
              animation-duration: auto, auto;
              animation-timeline: view();
              animation-range-start: entry, exit;
              animation-range-end: entry, exit;
            }
          }
        }
      }
    }
  }
</style>

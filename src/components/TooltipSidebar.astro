---
import type { HTMLAttributes } from "astro/types";
import Sidebar from "@/components/Sidebar.astro";
import Icon from "astro-svg-icon";
import Folder from "@/assets/images/icons/Folder.svg";
import Markdown from "@/assets/images/icons/Markdown.svg";
import { formatTitle } from "@/util/blog.util";
import type { TooltipCollection } from "@/util/collections.util";

interface Props extends HTMLAttributes<"aside"> {
  collections: TooltipCollection;
  name: string;
}

const { id, name, collections, ...props } = Astro.props;
---

<Sidebar id={id} name={name} {...props}>
  <form>
    <ul>
      {
        Object.entries(collections).map(([name, value]) => (
          <li>
            <details name="category">
              <summary>
                <Icon
                  src={Folder.src}
                  viewBox={`0 0 ${Folder.width} ${Folder.height}`}
                  height="14px"
                />
                <span>{name}</span>
              </summary>
              <ul>
                {value.map((entry) => (
                  <li>
                    <button
                      name="slug"
                      value={entry.slug}
                      formmethod="get"
                      formaction={`/tooltips/${entry.slug}`}
                    >
                      <Icon
                        src={Markdown.src}
                        viewBox={`0 0 ${Markdown.width} ${Markdown.height}`}
                      />
                      {formatTitle(entry.id)}
                    </button>
                  </li>
                ))}
              </ul>
            </details>
          </li>
        ))
      }
    </ul>
  </form>
</Sidebar>

<style>
  details {
    background: none;
    padding: 0;
    margin: 0;
    border: 0;
  }

  summary {
    background: none;
    font-variation-settings: "CASL" 0;
    font-size: 1rem;

    > .icon,
    > span {
      vertical-align: middle;
    }

    &:hover,
    &:focus {
      color: var(--color-title);
    }
  }

  p {
    font-variation-settings: "CASL" 0;
  }

  button {
    background: none;
    padding: 0;
    margin: 0;
    font-family: "Recursive", system-ui;
  }

  ul,
  li {
    list-style: none;
  }

  ul {
    margin: 0;
  }

  li {
    color: var(--color-li-group-text);
    font-size: 1rem;

    &[aria-current] {
      button {
        outline: none;
        background: var(--color-li-bg-hl);
        color: var(--color-background);
      }
    }
  }

  button {
    font-variation-settings: "CASL" 0;
    color: var(--color-text);
    background: var(--color-background);
    border: 0;
    width: 100%;
    text-align: left;
    font-size: 1rem;
    padding: 0.375em 0.5em;
    display: flex;
    align-items: center;
    gap: 0.5em;
    margin: 0;
    text-decoration: none;

    &:hover,
    &[aria-selected] {
      outline: none;
      background: var(--color-li-bg-hl);
      color: var(--color-background);
    }

    &:before,
    &:after {
      content: none;
    }
  }

  label {
    line-height: 1rem;
    &:hover,
    &:focus-visible {
      outline-style: auto;
      outline-offset: var(--button-outline-offset);
    }
  }
</style>

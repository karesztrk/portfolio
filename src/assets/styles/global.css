@import url("./reset.css") layer(reset);

@layer reset, base, typography, theme, components, utilities, animations, viewtransition, customproperty, scrollanimation;

:root {
  --mono: "MONO" 0;
  --casl: "CASL" 0;
  --wght: "wght" 400;
  --slnt: "slnt" 0;
  --CRSV: "CRSV" 0.5;

  --gap: clamp(1rem, 1vw, 3rem);
  --full: minmax(var(--gap), 1fr);
  --content: min(65ch, 100% - var(--gap) * 2);
  --popout-max: 2rem;
  --popout: minmax(0, var(--popout-max));

  --grid-row-nav: min-content;

  --h1-base: 3.5rem;
  --h2-base: 2rem;
  --h3-base: 1.1rem;
  --h4-base: 1.333rem;
  --p: 1.25rem;
  --font-size-fluid: 3cqi;

  --radius: 6px;

  --h-margin: 0.75em;
  --p-margin: 1.5rem;

  --button-min-width: 122px;
  --button-outline-offset: 4px;
  --button-transition: translate 60ms cubic-bezier(0.33, 1, 0.68, 1);

  --link-hover-decoration: dashed;
  --link-hover-decoration-thickness: 2px;

  --inline-gap: 0.5rem;

  --space-xs: 6px;
  --space-sm: 8px;

  --input-border-size: 3px;
  --input-height: 38px;
  --input-padding: 2px 4px;

  --font-mono: "Departure Mono", monospace;
  --font-menu: var(--font-mono);
  --font-base: "Recursive", system-ui;
  --menu-transition-duration: 115ms;
  --menu-transition-easing: cubic-bezier(0.36, 2.09, 0.07, -1.52);

  color-scheme: dark light;

  background-color: var(--color-background);
  color: var(--color-text);

  scroll-behavior: smooth;
  scrollbar-color: var(--color-primary) var(--color-background);
  scrollbar-width: thin;
}

@layer typography {
  body {
    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-family: var(--font-base);
    font-size: 1rem;
    line-height: 1.75;
  }

  .dotted {
    background: repeating-linear-gradient(
        90deg,
        transparent 0,
        transparent var(--_dot-size),
        var(--color-background) var(--_edge-end),
        var(--color-background) var(--_gardient-end)
      ),
      repeating-linear-gradient(
        180deg,
        var(--color-title) 0,
        var(--color-title) var(--_dot-size),
        transparent var(--_edge-end),
        transparent var(--_gardient-end)
      ),
      var(--color-background);
  }

  pre,
  code {
    font-size: 0.875rem;
    font-family: "Recursive", monospace;
    font-variation-settings: "MONO" 1;
  }

  h2 {
    > code {
      font-size: revert;
    }
  }

  p,
  ol,
  ul,
  label,
  summary {
    font-size: var(--p);
  }

  p,
  ol,
  ul {
    font-variation-settings: "CASL" 1;
    margin-block: var(--p-margin, 1.5rem);
  }

  li {
    margin-block: 0.75rem;
  }

  h1,
  h2,
  h3,
  h4,
  h5 {
    font-weight: 400;
    line-height: 1.1;
    color: var(--color-title);
    margin-block: var(--h-margin, 0.75em);
    /* Better matching to fallback font */
    font-size-adjust: 0.53;
  }

  h1 {
    font-weight: 700;
    --font-size-base: var(--h1-base);
  }

  h2 {
    --font-size-base: var(--h2-base);
  }

  h3 {
    --font-size-base: var(--h3-base);
  }

  h4 {
    --font-size-base: var(--h4-base);
  }

  @supports (font-size: 1cqi) {
    :is(h1, h2, h3, h4) {
      font-size: calc(var(--font-size-base) + var(--font-size-fluid, 3cqi));
    }
  }

  input,
  select,
  textarea {
    font-family: var(--font-mono);
  }

  button,
  a.button {
    font-family: var(--font-mono);
  }

  mark {
    font-variation-settings: "CASL" 0;
  }
}

@layer components {
  pre {
    padding: var(--space-xs) var(--space-sm);
    overflow: auto;
  }

  img,
  pre,
  canvas {
    border-radius: var(--radius);
    border: 2px solid var(--color-summary-border);

    &:hover {
      border: 2px solid var(--color-hover-summary-border);
    }
  }

  details {
    --_padding: 12px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    background-color: var(--color-summary-bg);
    padding: var(--_padding);
    margin: 1em 0;
    border-radius: var(--radius);
    border: 2px solid var(--color-summary-border);
    color: var(--color-summary-text);

    > summary {
      display: list-item;
      background-color: var(--color-summary-bg);
      cursor: pointer;
    }

    > p {
      margin-block: var(--space-sm) 0;
      background-color: var(--color-summary-bg);
    }

    &:hover,
    &:target {
      border: 2px solid var(--color-hover-summary-border);
    }
  }

  h1 {
    --_colums: 3;
    --_dot-size: 5px;
    --_dot-space: 2px;
    --_edge-end: calc(var(--_dot-size) + 1px);
    --_gardient-end: calc(var(--_edge-end) + var(--_dot-space));
    --_width: calc(var(--_gardient-end) * var(--_colums) - var(--_dot-space));
    position: relative;
    line-height: 110%;
    padding-inline-end: var(--_width);
    word-break: break-word;
    hyphens: auto;

    &:after {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      width: var(--_width);

      background: repeating-linear-gradient(
          90deg,
          transparent 0,
          transparent var(--_dot-size),
          var(--color-background) var(--_edge-end),
          var(--color-background) var(--_gardient-end)
        ),
        repeating-linear-gradient(
          180deg,
          var(--color-title) 0,
          var(--color-title) var(--_dot-size),
          transparent var(--_edge-end),
          transparent var(--_gardient-end)
        ),
        var(--color-background);
      margin-bottom: 5px;
    }
  }

  dialog {
    --entry-easing: cubic-bezier(0.33, 1, 0.68, 1);
    --exit-easing: cubic-bezier(0.32, 0, 0.67, 0);
    --entry-transition-time: 500ms;
    --exit-transition-time: 300ms;
    background: var(--colog-dialog-bg);
    border: 1px solid var(--colog-dialog-border);
    width: calc(var(--content) + 2 * var(--popout-max));
    opacity: 0;
    transform: scale(0);
    margin-block-start: 1rem;
    transition: all var(--exit-transition-time) var(--exit-easing)
      allow-discrete;

    @media (prefers-reduced-motion: reduce) {
      transition: none;
    }

    &::backdrop {
      opacity: 0;
      transition: opacity var(--entry-transition-time) display
        var(--entry-transition-time) allow-discrete;
      background: rgba(0, 0, 0, 0.61);
      backdrop-filter: blur(4px);

      @media (prefers-reduced-motion: reduce) {
        transition: none;
      }
    }

    &[open] {
      transform: scale(1);
      opacity: 1;
      transition: all var(--entry-transition-time) var(--entry-easing)
        allow-discrete;

      @media (prefers-reduced-motion: reduce) {
        transition: none;
      }
    }
  }

  dialog[open]::backdrop {
    opacity: 1;
    transition:
      opacity var(--entry-transition-time) var(--entry-easing),
      overlay var(--entry-transition-time) var(--entry-easing),
      display var(--entry-transition-time) var(--entry-easing) allow-discrete;

    @media (prefers-reduced-motion: reduce) {
      transition: none;
    }
  }

  @starting-style {
    dialog[open],
    dialog[open]::backdrop {
      opacity: 0;
    }

    dialog[open] {
      transform: scale(0.25);
    }
  }

  @container main (width > 60ch) {
    dialog {
      margin-block-start: 5rem;
    }
  }

  .separator {
    display: block;
    color: var(--color-logo);
    margin-block: 6rem;
    text-align: center;
    width: 100%;
  }

  .input-wrapper {
    --_border-color: var(--color-input-border);
    --_text-color: var(--color-input-text);
    --_offset: 2px;
    --_radius: 2;
    position: relative;
    border: var(--input-border-size) solid var(--_border-color);
    background: var(--color-input-bg);
    margin: var(--input-border-size);

    &:has(.icon) {
      display: flex;
      gap: var(--space-xs);
      justify-content: start;
      align-items: center;
    }

    &:focus-within {
      outline-style: auto;
    }

    > .icon {
      color: var(--_border-color);
      margin-inline-start: var(--space-xs);
    }

    > input,
    textarea,
    select {
      width: 100%;
      height: calc(var(--input-height) - 8px);
      background: var(--color-input-bg);
      border: 0;
      outline: none;
      padding-inline: var(--space-xs);
    }

    > textarea {
      resize: none;
    }

    &:before,
    &:after {
      position: absolute;
      content: "";
      background: var(--_border-color);
      z-index: -1;
    }

    &:before {
      inset-block: calc(var(--input-border-size) * -1 - 1px);
      inset-inline: 0;
    }

    &:after {
      inset-block: 0;
      inset-inline: calc(var(--input-border-size) * -1 - 2px);
    }

    &:hover {
      text-decoration: none;
      --_border-color: var(--color-input-border-hl);
      --_text-color: var(--color-title);
    }
  }

  button,
  a.button {
    --_color-button-bg: var(--color-button-default-bg);
    --_color-button-shadow: var(--color-button-default-shadow);
    --_color-button-text: var(--color-button-default-text);
    --_offset: 2px;
    --_radius: 2;
    --_elevation: -4px;

    &.primary,
    &[type="submit"] {
      --_color-button-bg: var(--color-button-primary-bg);
      --_color-button-text: var(--color-button-primary-text);
      --_color-button-shadow: var(--color-button-primary-shadow);
    }

    &.secondary {
      --_color-button-bg: var(--color-button-secondary-bg);
      --_color-button-text: var(--color-button-secondary-text);
      --_color-button-shadow: var(--color-button-secondary-shadow);
    }

    border: 0;
    position: relative;
    min-block-size: var(--input-height);
    min-inline-size: var(--button-min-width);
    padding: 0;
    margin: var(--_offset);
    background-color: var(--_color-button-shadow);
    outline-offset: var(--button-outline-offset);

    text-decoration: none;

    > span.front {
      padding: 0.5rem 1rem;
      transition: var(--button-transition);
      display: block;
      translate: 0 var(--_elevation);
      background-color: var(--_color-button-bg, revert);
      color: var(--_color-button-text, revert);

      &:before,
      &::after {
        position: absolute;
        content: "";
        z-index: -1;
        background: inherit;
      }

      &:before {
        inset-block: calc(-1 * var(--_offset));
        inset-inline: calc(var(--_radius) * var(--_offset));
      }

      &:after {
        inset-block: calc(var(--_radius) * var(--_offset));
        inset-inline: calc(-1 * var(--_offset));
      }
    }

    &:before,
    &::after {
      position: absolute;
      content: "";
      z-index: -1;
      background: inherit;
    }

    &:before {
      inset-block: calc(-1 * var(--_offset));
      inset-inline: calc(var(--_radius) * var(--_offset));
    }

    &:after {
      inset-block: calc(var(--_radius) * var(--_offset));
      inset-inline: calc(-1 * var(--_offset));
    }

    &:hover,
    &:focus-within {
      > span.front {
        translate: 0 -6px;
        transition: translate 50ms linear;

        @media (prefers-reduced-motion: reduce) {
          translate: 0 -4px;
        }
      }
    }

    &:active {
      > span.front {
        translate: 0 0;
        transition: translate 50ms cubic-bezier(0.22, 1, 0.36, 1);
      }
    }
  }

  .actions {
    display: flex;
    text-align: center;
    margin-block: 1rem 2rem;
  }

  details-tabs {
    position: relative;
    display: flex;
    gap: var(--gap);
    flex-wrap: wrap;

    details {
      display: contents;

      &[open] {
        & > summary {
          box-shadow: inset 0 -4px 0 var(--color-primary);
        }
      }

      > summary {
        outline-offset: var(--button-outline-offset);
        padding: 0.5rem 1rem;
        display: block;
        order: 0;
        cursor: pointer;
        background: transparent;
      }

      > *:nth-child(2) {
        order: 1;
        width: 100%;

        p {
          font-size: 1rem;
        }
      }
    }
  }

  .scroll-to-wrapper {
    margin-block-start: calc(var(--p-margin) * 1.5);

    a {
      font-family: var(--font-menu);
      color: var(--color-menu);
      text-shadow: 1px 1px 0px var(--color-menu-shadow);
      text-decoration: none;
      transition: background-color var(--menu-transition-duration)
        var(--menu-transition-easing);

      &:hover {
        background-color: var(--color-menu-bg);
      }
    }
  }

  h1,
  h2,
  h3,
  h4,
  h5 {
    .anchor-link {
      --_icon-size: 0.6em;
      --_relative-position: -0.8em;
      position: absolute;
      right: 0;
      outline: none;

      @container main (width > 63ch) {
        left: var(--_relative-position);
        right: 0;
        /* Extra padding so the hover is not lost  */
        padding-right: calc(1.1em + var(--_relative-position));
      }

      svg {
        opacity: 0;
        width: auto;
        height: var(--_icon-size);
        vertical-align: baseline;
        color: var(--color-anchor);
        transition:
          opacity 150ms cubic-bezier(0.61, 1, 0.88, 1),
          color 250ms cubic-bezier(0.61, 1, 0.88, 1);
        @media (prefers-reduced-motion: reduce) {
          transition: none;
        }
      }

      &:hover {
        svg {
          color: var(--color-anchor-hl);
        }
      }

      &:focus-visible {
        svg {
          opacity: 1;
        }
      }

      &:focus-within {
        svg {
          outline-style: auto;
          outline-offset: var(--button-outline-offset);
          color: var(--color-anchor-hl);
        }
      }
    }

    &:hover {
      .anchor-link {
        svg {
          opacity: 1;
        }
      }
    }
  }

  :target {
    .anchor-link {
      svg {
        color: var(--color-anchor-locked);
        opacity: 1;
      }
    }
  }

  mark {
    --_inline-padding: 0.4em;
    --_block-padding: 0.1em;
    --_inline-cut: 30%;
    --_deg: 90deg;
    --_hover-easing: cubic-bezier(0.65, 0, 0.35, 1);
    --_reveal-easing: cubic-bezier(0.85, 0, 0.15, 1);
    transition: 250ms var(--_hover-easing);
    line-height: 1.3em;
    padding: var(--_block-padding) var(--_inline-padding);
    box-decoration-break: clone;
    color: var(--color-background);
    background:
      linear-gradient(
          in oklch var(--_deg),
          var(--color-mark-1),
          var(--color-mark-2)
        )
        center,
      linear-gradient(
          in oklch var(--_deg),
          var(--color-mark-1),
          var(--color-mark-2)
        )
        center;
    background-size:
      calc(100% - var(--_inline-padding)) var(--mark-size),
      100% calc(var(--mark-size) - var(--_inline-cut));
    background-repeat: no-repeat;
    animation-duration: 750ms;
    animation-name: mark-reveal;
    animation-timing-function: var(--_reveal-easing);

    &:hover {
      --mark-size: 10%;
      color: var(--color-title);
      background-position-y: calc(100% - 0.1em);
      text-shadow:
        0 -0.05em 0 var(--color-background),
        -0.05em -0.05em 0 var(--color-background),
        -0.05em 0 0 var(--color-background),
        0 0.05em 0 var(--color-background),
        0.05em 0.05em 0 var(--color-background),
        0.05em 0 0 var(--color-background);
    }
  }

  abbr {
    font-variant-caps: all-petite-caps;
  }

  blockquote {
    --_left-sign-padding: 2rem;
    position: relative;
    padding-inline: var(--_quote-padding);
    display: flex;
    margin-block: var(--p-margin);

    p {
      margin: 0;
      flex: 1;
    }

    &:before,
    &:after {
      content: "";
      mask: url("../images/icons/Quote.svg") no-repeat;
      background-color: var(--color-quote);
      width: 28px;
      height: auto;
      flex-shrink: 0;
    }

    &:before {
      margin-inline-end: var(--_left-sign-padding);
    }

    &:after {
      transform: rotate(180deg);
      margin-inline-start: auto;
    }
  }
}

@layer base {
  body {
    display: grid;
    grid-template-columns:
      [full-start] var(--full) [popout-start] var(--popout) [content-start] var(
        --content
      )
      [content-end] var(--popout) [popout-end] var(--full) [full-end];
    grid-template-rows: var(--grid-row-nav) 1fr;
  }

  a {
    color: var(--color-link-text);

    &:hover {
      text-decoration: underline;
      text-decoration-style: var(--link-hover-decoration);
      text-decoration-thickness: var(--link-hover-decoration-thickness);
    }
  }

  ul {
    padding-left: 1em;

    > li {
      list-style-type: square;

      &::marker {
        color: var(--color-primary);
      }
    }
  }

  form {
    display: flex;
    flex-direction: column;
    gap: 6px;

    > label:not(:first-of-type) {
      margin-block-start: 1rem;
    }

    > .actions {
      margin-block-start: 2rem;
      display: flex;
      gap: 30px;
    }
  }
}

@layer theme {
  :root {
    --color-yellow-hue: 92.68;
    --color-pink-hue: 345.06;
    --color-teal-hue: 211.8;

    /* #ffd100 */
    --color-yellow-0: oklch(97% 0.04 var(--color-yellow-hue));
    --color-yellow-1: oklch(95% 0.06 var(--color-yellow-hue));
    --color-yellow-2: oklch(93.3% 0.09 var(--color-yellow-hue));
    --color-yellow-3: oklch(91.2% 0.12 var(--color-yellow-hue));
    --color-yellow-4: oklch(89.4% 0.15 var(--color-yellow-hue));
    --color-yellow-5: oklch(87.5% 0.17 var(--color-yellow-hue));
    --color-yellow-6: oklch(74.1% 0.15 var(--color-yellow-hue));
    --color-yellow-7: oklch(56.4% 0.11 var(--color-yellow-hue));
    --color-yellow-8: oklch(37.8% 0.07 var(--color-yellow-hue));
    --color-yellow-9: oklch(20.9% 0.04 var(--color-yellow-hue));

    /* #be008a */
    --color-pink-0: oklch(97% 0.019 var(--color-pink-hue));
    --color-pink-1: oklch(88% 0.078 var(--color-pink-hue));
    --color-pink-2: oklch(79.5% 0.14 var(--color-pink-hue));
    --color-pink-3: oklch(71% 0.22 var(--color-pink-hue));
    --color-pink-4: oklch(62% 0.22 var(--color-pink-hue));
    --color-pink-5: oklch(53.5% 0.22 var(--color-pink-hue));
    --color-pink-6: oklch(47% 0.19 var(--color-pink-hue));
    --color-pink-7: oklch(38% 0.16 var(--color-pink-hue));
    --color-pink-8: oklch(29% 0.12 var(--color-pink-hue));
    --color-pink-9: oklch(20.9% 0.088 var(--color-pink-hue));

    /* #03899c */
    --color-teal-0: oklch(97% 0.024 var(--color-teal-hue));
    --color-teal-1: oklch(89.1% 0.092 var(--color-teal-hue));
    --color-teal-2: oklch(81.4% 0.097 var(--color-teal-hue));
    --color-teal-3: oklch(73.4% 0.096 var(--color-teal-hue));
    --color-teal-4: oklch(65.8% 0.096 var(--color-teal-hue));
    --color-teal-5: oklch(57.85% 0.1 var(--color-teal-hue));
    --color-teal-6: oklch(50.4% 0.08 var(--color-teal-hue));
    --color-teal-7: oklch(40.6% 0.07 var(--color-teal-hue));
    --color-teal-8: oklch(30.2% 0.05 var(--color-teal-hue));
    --color-teal-9: oklch(21.2% 0.036 var(--color-teal-hue));

    /* The reapeating gradient doesnt oklch & color-mix  */
    --color-dark-0: hsl(234, 100%, 96%);
    --color-dark-1: hsl(236, 14%, 80%);
    --color-dark-2: hsl(207, 69%, 18%);
    --color-dark-3: hsl(207, 88%, 10%);
    --color-dark-4: hsl(207, 93%, 6%);

    --color-text: light-dark(var(--color-dark-3), var(--color-dark-1));
    --color-title: light-dark(var(--color-dark-4), var(--color-dark-0));
    --color-background: light-dark(var(--color-dark-0), var(--color-dark-4));

    --color-button-default-text: light-dark(
      var(--color-dark-4),
      var(--color-dark-4)
    );
    --color-button-default-bg: light-dark(
      var(--color-dark-1),
      var(--color-dark-1)
    );
    --color-button-default-shadow: light-dark(
      var(--color-dark-3),
      var(--color-dark-2)
    );

    --color-button-primary-text: light-dark(
      var(--color-dark-0),
      var(--color-dark-4)
    );
    --color-button-primary-bg: light-dark(
      var(--color-pink-5),
      var(--color-yellow-5)
    );
    --color-button-primary-shadow: light-dark(
      var(--color-pink-8),
      var(--color-yellow-7)
    );

    --color-button-secondary-text: light-dark(
      var(--color-dark-0),
      var(--color-dark-4)
    );
    --color-button-secondary-bg: light-dark(
      var(--color-pink-6),
      var(--color-yellow-3)
    );
    --color-button-secondary-shadow: light-dark(
      var(--color-pink-8),
      var(--color-yellow-7)
    );

    --color-menu: light-dark(var(--color-pink-6), var(--color-yellow-5));
    --color-menu-shadow: light-dark(var(--color-pink-1), var(--color-pink-5));
    --color-menu-bg: light-dark(var(--color-yellow-5), var(--color-pink-6));

    --color-link-text: light-dark(var(--color-pink-5), var(--color-yellow-4));

    --color-primary: light-dark(var(--color-pink-5), var(--color-yellow-5));
    --color-secondary: light-dark(var(--color-yellow-5), var(--color-pink-5));
    --color-tertiary: light-dark(var(--color-teal-7), var(--color-teal-5));

    --color-footer-divider: light-dark(
      var(--color-yellow-8),
      var(--color-pink-5)
    );

    --color-breadcrumb-border: light-dark(
      var(--color-yellow-8),
      var(--color-pink-5)
    );

    --color-summary-text: light-dark(var(--color-dark-3), var(--color-text));
    --color-summary-bg: light-dark(var(--color-dark-0), var(--color-dark-3));
    --color-summary-border: light-dark(
      var(--color-teal-8),
      var(--color-teal-6)
    );
    --color-hover-summary-border: light-dark(
      var(--color-teal-6),
      var(--color-teal-3)
    );

    --color-time-contained-bg: light-dark(
      var(--color-tertiary),
      var(--color-tertiary)
    );
    --color-time-contained-text: light-dark(
      var(--color-background),
      var(--color-background)
    );
    --color-time-text: light-dark(var(--color-tertiary), var(--color-tertiary));

    --color-input-text: light-dark(var(--color-text), var(--color-text));
    --color-input-bg: light-dark(var(--color-dark-0), var(--color-dark-3));
    --color-input-border: light-dark(var(--color-teal-7), var(--color-teal-5));
    --color-input-border-hl: light-dark(
      var(--color-teal-5),
      var(--color-teal-4)
    );

    --color-logo: light-dark(var(--color-pink-5), var(--color-pink-5));

    --colog-dialog-bg: light-dark(var(--color-dark-1), var(--color-dark-3));
    --colog-dialog-border: light-dark(var(--color-dark-4), var(--color-teal-8));

    --color-li-group-text: light-dark(var(--color-pink-7), var(--color-pink-4));
    --color-li-bg-hl: light-dark(var(--color-teal-8), var(--color-teal-5));

    --color-button-menu: light-dark(var(--color-title), var(--color-title));

    --color-balloon-bg: light-dark(var(--color-dark-2), var(--color-dark-0));
    --color-balloon-text: light-dark(var(--color-dark-0), var(--color-dark-4));

    --click-spark-color: var(--color-pink-3);

    --color-anchor: var(--color-text);
    --color-anchor-hl: light-dark(var(--color-teal-5), var(--color-teal-3));
    --color-anchor-locked: light-dark(var(--color-teal-7), var(--color-teal-5));

    --color-mark-1: light-dark(var(--color-pink-6), var(--color-pink-5));
    --color-mark-2: light-dark(var(--color-teal-6), var(--color-teal-5));

    --color-quote: light-dark(var(--color-teal-6), var(--color-pink-5));
  }
}

@layer utilities {
  .visually-hidden {
    display: inline-block;
    position: absolute;
    overflow: hidden;
    clip: rect(0 0 0 0);
    height: 1;
    width: 1;
    margin: -1;
    padding: 0;
    border: 0;
  }

  .flex-1 {
    flex: 1;
  }

  .popout-content {
    text-align: right;
    grid-column: popout-end;
    grid-row: -1 / 1;
    height: 100%;
    align-content: end;
  }
}

@layer animations {
  @keyframes float-up {
    from {
      transform: translateY(-10px);
    }

    to {
      transform: translateY(0);
    }
  }

  @keyframes slide-in {
    from {
      translate: 0 20px;
    }

    to {
      translate: 0 0;
    }
  }

  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes fade-out {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  @keyframes mark-reveal {
    from {
      --mark-size: 0%;
    }
    to {
      --mark-size: 100%;
    }
  }

  @keyframes mask-shift {
    from {
      --mask-position-y: 0%;
    }
    to {
      --mask-position-y: 100%;
    }
  }

  @keyframes gray-in {
    from {
      filter: grayscale(0);
    }
    to {
      filter: grayscale(1);
    }
  }

  @keyframes gray-out {
    from {
      filter: grayscale(1);
    }
    to {
      filter: grayscale(0);
    }
  }

  @keyframes list-item-enter {
    0% {
      transform-origin: top;
      transform: perspective(500px) rotate3d(1, 0, 0, calc(-1 * var(--tilt)))
        translate3d(0, 0, var(--push-back));
    }
    100% {
      transform-origin: top;
      transform: perspective(500px) rotate3d(1, 0, 0, 0deg) translate3d(0, 0, 0);
    }
  }

  @keyframes list-item-exit {
    0% {
      transform-origin: bottom;
      transform: perspective(500px) rotate3d(1, 0, 0, 0deg) translate3d(0, 0, 0);
      opacity: 1;
      filter: blur(0);
    }
    100% {
      transform-origin: bottom;
      transform: perspective(500px) rotate3d(1, 0, 0, var(--tilt))
        translate3d(0, 0, var(--push-back));
      opacity: var(--top-fade);
      filter: blur(--top-blur);
    }
  }
}

@layer viewtransition {
  @media (prefers-reduced-motion: no-preference) {
    @view-transition {
      navigation: auto;
    }

    :root {
      --view-transition-exit-duration: 250ms;
      --view-transition-entry-duration: 350ms;
      --view-transition-stagger-delay: calc(
        var(--view-transition-entry-duration) / 2
      );
      --view-transition-entry-function: cubic-bezier(0.34, 1.56, 0.64, 1);
      view-transition-name: content;
    }

    header {
      view-transition-name: menu;
    }

    main > h1,
    main > hgroup {
      view-transition-name: title;
    }

    header > nav svg.logo {
      view-transition-name: logo;
    }

    ::view-transition-old(logo) {
      animation-duration: var(--view-transition-exit-duration);
      animation-timing-function: cubic-bezier(0.33, 1, 0.68, 1);
      animation-fill-mode: both;
      animation-fill-mode: both;
      animation-name: gray-in;
    }

    ::view-transition-new(logo) {
      animation-delay: var(--view-transition-exit-duration);
      animation-duration: calc(
        var(--view-transition-entry-duration)+var(
            --view-transition-stagger-delay
          )
      );
      animation-timing-function: cubic-bezier(0.12, 0, 0.39, 0);
      animation-fill-mode: both;
      animation-name: gray-out;
    }

    ::view-transition-old(name),
    ::view-transition-new(name) {
      /* Fill the whole height in the group */
      height: 100%;
      /* Maintain image aspect ratio */
      width: auto;
    }

    ::view-transition-old(title) {
      animation-duration: var(--view-transition-exit-duration);
      animation-timing-function: linear;
      animation-fill-mode: both;
      animation-name: fade-out;
    }

    ::view-transition-new(title) {
      animation-duration: var(--view-transition-entry-duration);
      animation-delay: var(--view-transition-exit-duration);
      animation-timing-function: var(--view-transition-entry-function);
      animation-fill-mode: both;
      animation-name: fade-in, slide-in;
    }

    ::view-transition-old(content) {
      animation-duration: var(--view-transition-exit-duration);
      animation-timing-function: linear;
      animation-fill-mode: both;
      animation-name: fade-out;
    }

    ::view-transition-new(content) {
      animation-duration: var(--view-transition-entry-duration);
      animation-delay: calc(
        var(--view-transition-stagger-delay) +
          var(--view-transition-exit-duration)
      );
      animation-timing-function: var(--view-transition-entry-function);
      animation-fill-mode: both;
      animation-name: fade-in, slide-in;
    }

    ::view-transition-old(content),
    ::view-transition-new(content) {
      /* Maintain image aspect ratio */
      width: auto;
    }

    ::view-transition-group(name),
    ::view-transition-group(content) {
      /* Clip the any overflow as its transitioning between states */
      overflow: clip;
    }
  }
}

@layer customproperty {
  @property --mark-size {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 100%;
  }

  @property --transition-percentage {
    syntax: "<percentage>";
    inherits: true;
    initial-value: -5%;
  }

  @property --mask-position-y {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}

@layer scrollanimation {
  @supports (animation-timeline: view()) {
    @media (prefers-reduced-motion: no-preference) {
      figure {
        --_block-size: 10;
        --_block-width: calc(100% / var(--_block-size));

        /*  Separated animation values to not interfere with the shorthand */
        animation-name: mask-shift;
        animation-timing-function: linear;
        animation-fill-mode: both;
        animation-timeline: view();
        animation-range: entry 20% cover 40%;

        mask-repeat: no-repeat;
        mask-size:
          var(--_block-width)
            calc(0 * var(--_block-width) + var(--mask-position-y)),
          var(--_block-width)
            calc(1 * var(--_block-width) + var(--mask-position-y)),
          var(--_block-width)
            calc(2 * var(--_block-width) + var(--mask-position-y)),
          var(--_block-width)
            calc(3 * var(--_block-width) + var(--mask-position-y)),
          var(--_block-width)
            calc(4 * var(--_block-width) + var(--mask-position-y)),
          var(--_block-width)
            calc(5 * var(--_block-width) + var(--mask-position-y)),
          var(--_block-width)
            calc(6 * var(--_block-width) + var(--mask-position-y)),
          var(--_block-width)
            calc(7 * var(--_block-width) + var(--mask-position-y)),
          var(--_block-width)
            calc(8 * var(--_block-width) + var(--mask-position-y)),
          var(--_block-width)
            calc(9 * var(--_block-width) + var(--mask-position-y)),
          var(--_block-width)
            calc(10 * var(--_block-width) + var(--mask-position-y));

        mask-position:
          calc(0 * var(--_block-width)) bottom,
          calc(1 * var(--_block-width)) bottom,
          calc(2 * var(--_block-width)) bottom,
          calc(3 * var(--_block-width)) bottom,
          calc(4 * var(--_block-width)) bottom,
          calc(5 * var(--_block-width)) bottom,
          calc(6 * var(--_block-width)) bottom,
          calc(7 * var(--_block-width)) bottom,
          calc(8 * var(--_block-width)) bottom,
          calc(9 * var(--_block-width)) bottom,
          calc(10 * var(--_block-width)) bottom;

        mask-image: linear-gradient(#000 100%, transparent),
          linear-gradient(#000 100%, transparent),
          linear-gradient(#000 100%, transparent),
          linear-gradient(#000 100%, transparent),
          linear-gradient(#000 100%, transparent),
          linear-gradient(#000 100%, transparent),
          linear-gradient(#000 100%, transparent),
          linear-gradient(#000 100%, transparent),
          linear-gradient(#000 100%, transparent),
          linear-gradient(#000 100%, transparent),
          linear-gradient(#000 100%, transparent);
      }
    }
  }
}

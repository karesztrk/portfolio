---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import { formatTitle, formatDate } from "@/util/blog.util.ts";
import Temporal from "@components/Temporal.astro";
import Tags from "@components/Tags.astro";
import Fields from "@components/Fields.astro";
import ReadTime from "@components/ReadTime.astro";
import BaselineStatus from "@/components/BaselineStatus.astro";

export async function getStaticPaths() {
  const blog = await getCollection("Blog");
  return blog.map((post) => ({
    params: { slug: post.slug },
    props: { entry: post },
  }));
}

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter } = await entry.render();
const title = formatTitle(entry.id);
---

<Layout title={title}>
  <article>
    <h1>{title}</h1>

    <Fields>
      <Tags aria-label="Tags" data={entry.data.tags} />
      <Temporal type="text" icon={true} aria-label="Publish date">
        {formatDate(entry.data.date)}
      </Temporal>
      <ReadTime aria-label="Read time">
        {remarkPluginFrontmatter.minutesRead}
      </ReadTime>
    </Fields>
    {
      entry.data.features
        ?.filter(Boolean)
        .map((feature) => (
          <BaselineStatus
            feature-id={feature}
            browsers={["chrome", "edge", "firefox", "safari"]}
          />
        ))
    }
    <Content />
  </article>
</Layout>

<script is:inline>
  const handlePageReveal = async (e) => {
    if (e.viewTransition) {
      document.querySelector(`h1`).style.viewTransitionName = "name";

      await e.viewTransition.ready;
      document.querySelector(`h1`).style.viewTransitionName = "none";
    }
  };

  window.addEventListener("pagereveal", handlePageReveal);
</script>

<style>
  article {
    --content-spacer: 3rem;
    h1 {
      margin-block-end: 1rem;
    }

    .fields {
      margin-block-end: var(--content-spacer);

      &:has(+ baseline-status) {
        margin-block-end: var(--p-margin);
      }

      ~ baseline-status:last-of-type {
        margin-block-end: var(--content-spacer);
      }
    }
  }
</style>

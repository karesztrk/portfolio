---
import Layout from "../layouts/Layout.astro";
import Icon from "../components/Icon.astro";
import Search from "../assets/images/icons/Search.svg?url";
import InputButton from "../components/InputButton.astro";
import SearchDialog from "../components/SearchDialog.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { collectionNames } from "../util/collections.util.ts";
import type { CollectionType } from "../util/collections.util.ts";

const resolvedCollections = await Promise.all(
  collectionNames.map((c) =>
    getCollection<CollectionType, CollectionEntry<CollectionType>>(c),
  ),
);

const collections = resolvedCollections.reduce(
  (acc, curr, index) => {
    const key = collectionNames[index];
    acc[key] = curr;
    return acc;
  },
  {} as Record<CollectionType, CollectionEntry<CollectionType>[]>,
);
---

<Layout title="Mind-map">
  <h1>Mind-map</h1>
  <InputButton id="search-button">
    <Icon src={Search} viewBox="0 0 18 18" />Search
  </InputButton>
  <article>
    <output></output>
  </article>
</Layout>
<SearchDialog id="search-dialog" collections={collections} />

<script>
  const searchButton = document.getElementById("search-button");
  const searchDialog = document.getElementById(
    "search-dialog",
  ) as HTMLDialogElement | null;

  if (searchButton && searchDialog) {
    searchButton.addEventListener("click", () => {
      searchDialog.showModal();
    });
  }

  if (searchDialog) {
    searchDialog.addEventListener("close", (e) => {
      console.log(e);
      const { returnValue } = searchDialog;
      const output = document.querySelector("output");
      if (returnValue && output) {
        output.value = returnValue;
      }
    });
  }
</script>

<style>
  #search-button {
    width: 300px;
    display: block;
    margin-block: 4rem;
    margin-inline: auto;
  }
</style>
